<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2014 Acxio
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
    http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:alf="http://tools.acxio.fr/schema/alfresco"
	xsi:schemaLocation="http://tools.acxio.fr/schema/alfresco http://tools.acxio.fr/schema/alfresco.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<import resource="classpath:/META-INF/spring/app-context.xml"/>
	
	<bean id="itemReader" class="fr.acxio.tools.agia.item.MultiLineNodeListItemReader">
		<property name="currentVariableName" value="current"/>
		<property name="nextVariableName" value="next"/>
		<property name="newRecordCondition" value="@{(#current['NUMREC'] == null) or #current['NUMREC'].isEmpty() or (#next['NUMREC'] == null) or #next['NUMREC'].isEmpty() or !#next['NUMREC'].equals(#current['NUMREC'])}"/>
	    <property name="delegate">
	        <bean class="org.springframework.batch.item.file.FlatFileItemReader">
	            <property name="resource" value="file:src/test/resources/testFiles/mixedindex.csv" />
	            <property name="lineMapper">
	                <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
	                    <property name="lineTokenizer" ref="orderFileTokenizer"/>
	                    <property name="fieldSetMapper">
	                        <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
	                    </property>
	                </bean>
	            </property>
	        </bean>
	    </property>
	</bean>
	
	<bean id="orderFileTokenizer" class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer">
	    <property name="tokenizers">
	        <map>
	            <entry key='*Type","T1*' value-ref="t1RecordTokenizer" />
	            <entry key='*TYPE","T2*' value-ref="t2RecordTokenizer" />
	        </map>
	    </property>
	</bean>

	<bean id="t1RecordTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
 		<property name="delimiter" value=","/>
 		<property name="names" value="A,B,C,D,E,F,G,H,I,NUMREC,K,L,M,N,O,P,Q,R,S"/>
	</bean>
	
	<bean id="t2RecordTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
 		<property name="delimiter" value=","/>
 		<property name="names" value="A,B,C,D,E,F,G,H,I,J,K,NUMREC,M,N,O,P,Q"/>
	</bean>

</beans>
