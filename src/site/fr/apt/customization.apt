~~Copyright 2014 Acxio
~~
~~Licensed under the Apache License, Version 2.0 (the "License");
~~you may not use this file except in compliance with the License.
~~You may obtain a copy of the License at
~~
~~  http://www.apache.org/licenses/LICENSE-2.0
~~
~~Unless required by applicable law or agreed to in writing, software
~~distributed under the License is distributed on an "AS IS" BASIS,
~~WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~See the License for the specific language governing permissions and
~~limitations under the License.
 -----
 AGIA
 -----
 Acxio
 -----
 2014-07-21
 -----

Personnalisation

 La personnalisation peut se faire à plusieurs niveaux:
 
* Changement de paramétrage pour une tâche configurée
 
 L'exemple typique est la configuration de la base de données.
 
 Cela peut se faire soit dans les fichiers <<<*.properties>>> dans la
 configuration du modèle de WebApp, soit dans un fichier <<<*-context.xml>>>
 dans la configuration du modèle de WebApp, soit encore directement dans la
 configuration d'un travail.
 
 Il peut être nécessaire d'ajouter un pilote de base de données dans le
 répertoire <<<lib/db>>>.
 
** Paramétrage d'un job depuis un fichier de propriétés externe

 Un tel paramétrage vise à externaliser les propriétés essentielles d'un fichier
 de job pour le rendre plus facile à déployer et à mettre à jour.
 
 Voici les étapes à suivre pour externaliser ces propriétés:
 
 [[1]] Créer un fichier properties contenant les clefs et les valeurs des
 propriétés souhaitées:
 
+---------------------------+
sample.alf.url=http://localhost:8080/alfresco
sample.alf.username=admin
sample.alf.password=admin
+---------------------------+

 NB: Il est préférable de préfixer l'ensemble des clefs relatives à un même job
 ou domaine pour éviter les collisions entre les propriétés.
 
 [[2]] Ajouter et ajuster la déclaration suivante au début du fichier de job:
 
+---------------------------+
	<bean id="sampleProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:sample.properties" />
		<property name="order" value="0" /> <!-- Loaded before Spring Batch properties -->
	</bean>
+---------------------------+
 
 [[3]] Utiliser les clefs dans le fichier de job à l'aide du préfix
 <<<$\{...\}>>>:
 
+---------------------------+
	<bean id="alfrescoService" class="fr.acxio.tools.agia.alfresco.AlfrescoServiceImpl">
		<property name="endpointAddress" value="${sample.alf.url}/api"/>
		<property name="webappAddress" value="${sample.alf.url}"/>
		<property name="username" value="${sample.alf.username}"/>
		<property name="password" value="${sample.alf.password}"/>
	</bean>
+---------------------------+
 
 [[4]] Lors du déploiment du fichier de job dans le répertoire <<<jobs>>>, le
 fichier de propriétés peut être déployé dans le répertoire <<<resources>>>.
 
* Ajout de tâches pour un travail configuré

 Cela doit se faire dans le fichier de configuration du travail.
 
* Ajout de travaux

 Cela doit se faire en ajoutant un fichier ...xml dans le répertoire <<<jobs>>>.
 
* Ajout de modules pour les travaux

 Il faut ajouter un fichier ...jar dans le répertoire WEB-INF/classes du modèle
 de WebApp.

* Personnalisation de l'interface utilisateur web

 Il faut ajouter des fichiers dans le répertoire du modèle de WebApp.
 
 (Voir documentation Jetty 8).

* Personnalisation du service

 (Voir la documentation YAJSW)